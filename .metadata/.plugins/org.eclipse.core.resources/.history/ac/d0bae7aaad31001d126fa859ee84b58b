package com.example.demo.service.impl;

import com.example.demo.entity.Comment;
import com.example.demo.entity.Post;
import com.example.demo.exception.ResourceNotFoundException;
import com.example.demo.payload.CommentDto;
import com.example.demo.repo.CommentRepository;
import com.example.demo.repo.PostRepository;
import com.example.demo.service.CommentService;

public class CommentServiceImpl implements CommentService{

	private CommentRepository commentRepository;
	private PostRepository postRepository;
	
	public CommentServiceImpl(CommentRepository commentRepository, PostRepository postRepository) {
		this.commentRepository = commentRepository;
		this.postRepository = postRepository;
	}

	
	//convert Enity to CommentDto
	private CommentDto maptoDto(Comment comment) {
		CommentDto commentDto = new CommentDto();
		commentDto.setId(comment.getId());
		commentDto.setName(comment.getName());
		commentDto.setEmail(comment.getEmail());
		commentDto.setBody(comment.getMessageBody());
		
		
		return commentDto;
		}
	
	
	//convert CommentDto to Entity
	private Comment maptoEntity(CommentDto commentDto) {
		
	Comment comment = new Comment();
	comment.setId(commentDto.getId());
	comment.setName(commentDto.getName());
	comment.setEmail(commentDto.getEmail());
	comment.setMessageBody(commentDto.getBody());
	return comment;
	
	}
	@Override
	public CommentDto createComment(long postid, CommentDto commentDto) {
		
		Comment comment = maptoEntity(commentDto);
		
		//retrieve post entity by id
		Post post = postRepository.findById(postid).orElseThrow(
				()-> new ResourceNotFoundException("Post", "id", postid));
		
		//set post to comment entity
		comment.setPost(post);
		
		//save coment entity to DB
		
		Comment newComment =commentRepository.save(comment);
		
		return maptoDto(newComment);
	}

	

}
